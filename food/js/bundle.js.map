{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,UAAU;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACzHpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,UAAU,MAAM,SAAS;AACzD,uDAAuD,WAAW;AAClE,qDAAqD,WAAW;AAChE;AACA;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK,UAAU,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;AC3D2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,gCAAgC;AAChC;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,gBAAgB;AAChB,2CAA2C;AAC3C;AACA;AACA;AACA,qDAAqD;AACrD,mDAAmD;AACnD;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD,kCAAkC;AAClC,4CAA4C;AAC5C,iBAAiB,gBAAgB;AACjC,sDAAsD;AACtD,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,yDAAyD;AACzD,+CAA+C;AAC/C,qCAAqC;AACrC,qBAAqB;AACrB,yDAAyD;AACzD;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,+CAA+C;AAC/C,QAAQ,iDAAS,0BAA0B;AAC3C;AACA,2DAA2D;AAC3D,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,2BAA2B;AAC3B,kCAAkC;AAClC,mDAAmD;AACnD;AACA,YAAY,kDAAU,YAAY;AAClC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC/IrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACA;AACC;;;;;;;;;;;;;;;ACtDtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,+BAA+B,WAAW;AAC1C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA,uCAAuC,WAAW;AAClD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACzNrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,wCAAwC;AACxC,mDAAmD;AACnD,SAAS;AACT,8BAA8B;AAC9B,4DAA4D;AAC5D,SAAS;AACT;AACA;AACA,qCAAqC;AACrC,sDAAsD;AACtD,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,qCAAqC;AACrC;AACA;AACA,wCAAwC;AACxC,sCAAsC;AACtC,sCAAsC;AACtC,uCAAuC;AACvC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC5CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;UCzDrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACF;AACE;AACE;AACM;AAC5C;AACA;AACA,0CAA0C,yDAAS;AACnD,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV,CAAC;AACD;AACA","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n     //Calc \r\n\r\n     const result = document.querySelector('.calculating__result span');\r\n\r\n\r\n     let sex, height, weight, age, ratio;\r\n \r\n     if (localStorage.getItem('sex')) {\r\n         sex = localStorage.getItem('sex');\r\n     } else {\r\n         sex = 'female';\r\n         localStorage.setItem('sex', 'female');\r\n     }\r\n \r\n \r\n     if (localStorage.getItem('ratio')) {\r\n         ratio = localStorage.getItem('ratio');\r\n     } else {\r\n         ratio = 1.375;\r\n         localStorage.setItem('ratio', 1.375);\r\n     }\r\n \r\n     function initLocalsettings(selector, activeClass) {\r\n         const elements = document.querySelectorAll(selector);\r\n \r\n         elements.forEach(elem => {\r\n             elem.classList.remove(activeClass);\r\n \r\n             //? Проверка по локальной базе, и в случае чего, назначение на элементов класса активности\r\n \r\n             if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                 elem.classList.add(activeClass);\r\n             }\r\n \r\n             if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                 elem.classList.add(activeClass);\r\n             }\r\n         });\r\n     }\r\n     initLocalsettings('#gender div', 'calculating__choose-item_active');\r\n     initLocalsettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n \r\n     function calcTotal() {\r\n         if (!sex || !height || !weight || !age || !ratio) {\r\n             result.textContent = '  ';\r\n             return;\r\n         }\r\n \r\n         if (sex === 'female') {\r\n             result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n         } else {\r\n             result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.8 * age)) * ratio);\r\n         }\r\n     }\r\n \r\n     calcTotal();\r\n \r\n     function getStaticInfo(selector, activeClass) {\r\n         const elements = document.querySelectorAll(`${selector} div`);\r\n \r\n         elements.forEach(elem => {\r\n             elem.addEventListener('click', (e) => {\r\n                 if (e.target.getAttribute('data-ratio')) {\r\n                     ratio = e.target.getAttribute('data-ratio');\r\n                     localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                 } else {\r\n                     sex = e.target.getAttribute('id');\r\n                     localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                 }\r\n \r\n                 elements.forEach(elem => {\r\n                     elem.classList.remove(activeClass);\r\n                 });\r\n \r\n                 e.target.classList.add(activeClass);\r\n \r\n                 calcTotal();\r\n             });\r\n         });\r\n \r\n     }\r\n \r\n     getStaticInfo('#gender', 'calculating__choose-item_active');\r\n     getStaticInfo('.calculating__choose_big', 'calculating__choose-item_active');\r\n \r\n \r\n     //? Ф-я Получения значений из инпутов\r\n     function getDynamicInfo(selector) {\r\n         const input = document.querySelector(selector);\r\n \r\n \r\n         if (input.value.match(/\\D/g)) {\r\n             input.style.border = '1px solid red';\r\n         } else {\r\n             input.style.border = 'none';\r\n         }\r\n \r\n         input.addEventListener('input', () => {\r\n             switch (input.getAttribute('id')) {\r\n                 case 'height':\r\n                     height = +input.value;\r\n                     break;\r\n                 case 'weight':\r\n                     weight = +input.value;\r\n                     break;\r\n                 case 'age':\r\n                     age = +input.value;\r\n                     break;\r\n             }\r\n             calcTotal();\r\n \r\n         });\r\n \r\n     }\r\n \r\n     getDynamicInfo('#height');\r\n     getDynamicInfo('#weight');\r\n     getDynamicInfo('#age');\r\n}\r\n\r\nexport default calc; \r\n","function cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.transfer = 27;\r\n            this.changeToUAH(); //Метод для конвертации\r\n            this.parent = document.querySelector(parentSelector); //Получение элемента родителя и добавление его в конструкор, получая из введёных значений\r\n        }\r\n\r\n        // ф-я конвертации валюты, после чего в контексте price будет заменяться цена на конвертированную\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        // ф-я которая генерирует карточку в зависимости от контекста вызова, и вставляет в html документ append\r\n        render() {\r\n            const element = document.createElement('div');\r\n            element.innerHTML = `\r\n                 <div class=\"menu__item\">\r\n                     <img src=${this.src} alt=${this.alt}>\r\n                     <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                     <div class=\"menu__item-descr\">${this.descr}</div>\r\n                     <div class=\"menu__item-divider\"></div>\r\n                     <div class=\"menu__item-price\">\r\n                         <div class=\"menu__item-cost\">Цена:</div>\r\n                         <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                     </div>\r\n                 </div>`;\r\n\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url} status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n\r\n    //? Так можно генерировать карточки с текстом, что достаточно удобно, потому что надо вносить только информацию, а длее они автоматически генерируются и создаются на странице\r\n\r\n    getResource('http://localhost:3000/menu/')\r\n        .then(data => {\r\n            data.forEach(({ img, altimg, title, descr, price }) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n}\r\n\r\nexport default cards; ","import { closeModal, openModal } from \"./modal\"; \r\n\r\nfunction forms(modalTimerId) {\r\n     //? Forms (AJAX запросы с использованием локального сервера MAMP) \r\n\r\n    // Переменная которая по тегу <form> получает элементы\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    // Объект в котором находятся статусы запросов, пригодиться для оповещения пользователя о статусе\r\n    const message = {\r\n        loading: 'img/form/005 spinner.svg',\r\n        success: 'Спсибо! Мы с вами скоро свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => { // Перебор всех тегов <form>\r\n        bindPostData(item); // Исппользование ф-ии для одной из пребранных форм\r\n    });\r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json();\r\n    };\r\n\r\n    // \r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => { // Событие которое инициализирует отправку формы, работает только на <form> или <input type=\"submit\">\r\n            e.preventDefault(); //Сбро стандартного поведения браузера\r\n\r\n            // Создание элемента на странице, в котором будет написан статус отправки данных на сервер\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading; // Присваивание уведомлению класса .status\r\n            statusMessage.style.cssText = `\r\n                 display: block; \r\n                 margin: 0 auto;\r\n             `; // Сразу после отправки присвоение статуса загрузки\r\n            // form.append(statusMessage); // Добавление в конец полученной формы статуса\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n\r\n            // const request = new XMLHttpRequest(); // Моздание HTTP объекта, которые далее должен передать запрос на сервер\r\n            // request.open('POST', 'server.php'); // Метод делающий пост запрос серверу \r\n\r\n\r\n            // request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n\r\n\r\n            // Для создания объекта и для дальнейшей конвертации его в JSON\r\n            const formData = new FormData(form);\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n\r\n            // Конвертация объекта в JSON\r\n            //! PHP не умеет работать с JSON поэтому надо будет конвертировать в подходящий формат, в дальнейшем\r\n            // const json = JSON.stringify(object); // Превращение из обычного объекта в JSON\r\n            // request.send(json);\r\n\r\n\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data); // Отображает в консоли переданные данные\r\n                    showThanksModal(message.success); // Вызывается модальное окно с сообщением о благодарности \r\n                    form.reset(); // так производится очистка формы\r\n                    statusMessage.remove(); // Удаление сообщения о статусе\r\n                }).catch(() => { // В случае ошибки будет выполняться блок catch\r\n                    showThanksModal(message.failure); // Вызывается модальное окно с сообщением об ошибке\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n\r\n\r\n            // const formData = new FormData(form); // Создание пар ключ значение, аргументы для этого получаются с формы\r\n\r\n            // Из-за спцифичночти FormData данные надо будет первести в JSON\r\n\r\n            // request.send(formData);\r\n\r\n            // request.addEventListener('load', () => {\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response); // Отображает в консоли переданные данные\r\n            //         showThanksModal(message.success); // Вызывается модальное окно с сообщением о благодарности \r\n            //         statusMessage.remove(); // Удаление сообщения о статусе\r\n            //         form.reset(); // так производится очистка формы\r\n            //     } else {\r\n            //         showThanksModal(message.failure); // Вызывается модальное окно с сообщением об ошибке\r\n            //     }\r\n            // });\r\n        });\r\n    }\r\n\r\n    // Modal with thanks message\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog'); // Поулчаем диалоговое окно, сам блок\r\n\r\n        prevModalDialog.classList.add('hide'); // Сразу же скрываем его\r\n        openModal('.modal', modalTimerId); // Ф-я отвеччающая за открытие окна, переключает классы\r\n\r\n        const thanksModal = document.createElement('div'); // Создание окна благодарности\r\n        thanksModal.classList.add('modal__dialog'); // Добавление класса, основы для окна \r\n\r\n        // Добавление на страницу модального окна, в котором описывается и состояние отправки формы\r\n        thanksModal.innerHTML = `  \r\n             <div class=\"modal__content\">\r\n                 <div class=\"modal__close\" data-close>×</div>\r\n                 <div class=\"modal__title\">${message}</div>\r\n             </div>\r\n         `;\r\n\r\n\r\n        document.querySelector('.modal').append(thanksModal); // Добавленние окна благодарности\r\n        setTimeout(() => { // Создание асинхронного кода по удалению окна после отправки формы\r\n            thanksModal.remove(); // Удаление окна благодарности\r\n            prevModalDialog.classList.add('show'); // Две следующие операции создают и скрывают модальное оконо с формой\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal'); // Ф-я закрытия модального окна \r\n        }, 4000);\r\n    }\r\n\r\n    // Пример с GET запросом\r\n    //     fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    //             method: \"POST\",\r\n    //             body: JSON.stringify({ name: 'Alex' }),\r\n    //             headers: {\r\n    //                 'Content-type': 'application/json'\r\n    //             }\r\n    //         }) // От сюда мы получим промис\r\n    //         .then(response => response.json())\r\n    //         .then(json => console.log(json));\r\n\r\n\r\n    fetch('http://localhost:3000/menu')\r\n        .then(data => data.json())\r\n        .then(res => console.log(res));\r\n}\r\n\r\nexport default forms; ","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    \r\n    modal.classList.toggle('show');\r\n    document.body.style.overflow = \"hidden\";\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);    \r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    \r\n    modal.classList.toggle('show');\r\n    document.body.style.overflow = \"\";\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n      // Modal \r\n\r\n        const modalTrigger = document.querySelectorAll(triggerSelector),\r\n        modal = document.querySelector(modalSelector); \r\n    \r\n        modalTrigger.forEach(btn => {\r\n            btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n        });\r\n        \r\n\r\n  modal.addEventListener('click', (event) => {\r\n      if (event.target === modal || event.target.getAttribute('data-close') == '') {\r\n          closeModal(modalSelector, );\r\n      }\r\n  });\r\n\r\n  document.addEventListener('keydown', (e) => {\r\n      if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n          closeModal(modalSelector, );\r\n      }\r\n  });\r\n\r\n  function showModalByScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n          // -1 потому что при пролистывании страница может не дойти до конца, а высота клиента будет на 1 меньше, и чтобы избежать ошибок, отняли 1px\r\n          openModal(modalSelector, modalTimerId);\r\n          window.removeEventListener('scroll', showModalByScroll);\r\n      }\r\n  }\r\n\r\n  window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal; \r\nexport { openModal };\r\nexport { closeModal }; \r\n","function slider() {\r\n     // Slider\r\n\r\n     const slides = document.querySelectorAll('.offer__slide'),\r\n     slider = document.querySelector('.offer__slider'),\r\n     prev = document.querySelector('.offer__slider-prev'),\r\n     next = document.querySelector('.offer__slider-next'),\r\n     total = document.querySelector('#total'),\r\n     current = document.querySelector('#current'),\r\n     slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n     slidesField = document.querySelector('.offer__slider-inner'),\r\n     width = window.getComputedStyle(slidesWrapper).width;\r\n console.log(slides.length);\r\n let slideIndex = 1;\r\n let offset = 0;\r\n\r\n if (slides.length < 10) {\r\n     total.textContent = `0${slides.length}`;\r\n     current.textContent = `0${slideIndex}`;\r\n } else {\r\n     total.textContent = slides.length();\r\n     current.textContent = slideIndex;\r\n }\r\n\r\n next.addEventListener('click', () => {\r\n     if (offset == (+width.slice(0, width.length - 2) * (slides.length - 1))) {\r\n         offset = 0;\r\n     } else {\r\n         offset += +width.slice(0, width.length - 2);\r\n     }\r\n\r\n     slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n     if (slideIndex == slides.length) {\r\n         slideIndex = 1;\r\n     } else {\r\n         slideIndex++;\r\n     }\r\n\r\n     if (slides.length < 10) {\r\n         current.textContent = `0${slideIndex}`;\r\n     } else {\r\n         current.textContent = slideIndex;\r\n     }\r\n\r\n     dots.forEach(dot => dot.style.opacity = \".5\");\r\n     dots[slideIndex - 1].style.opacity = 1;\r\n });\r\n\r\n prev.addEventListener('click', () => {\r\n     if (offset == 0) {\r\n         offset = +width.slice(0, width.length - 2) * (slides.length - 1);\r\n     } else {\r\n         offset -= +width.slice(0, width.length - 2);\r\n     }\r\n\r\n     slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n     if (slideIndex == 1) {\r\n         slideIndex = slides.length;\r\n     } else {\r\n         slideIndex--;\r\n     }\r\n\r\n     if (slides.length < 10) {\r\n         current.textContent = `0${slideIndex}`;\r\n     } else {\r\n         current.textContent = slideIndex;\r\n     }\r\n\r\n     dots.forEach(dot => dot.style.opacity = \".5\");\r\n     dots[slideIndex - 1].style.opacity = 1;\r\n });\r\n\r\n\r\n\r\n\r\n //? Улучшенный вариант слайдера, внизу будет такой себе (он больше был ориантрирован на сам функцианал)\r\n\r\n slidesField.style.width = 100 * slides.length + '%';\r\n slidesField.style.display = 'flex';\r\n slidesField.style.transition = '0.5s all';\r\n slides.forEach(slide => {\r\n     slide.style.width = width;\r\n });\r\n\r\n slider.style.position = 'relative';\r\n\r\n const indicators = document.createElement('ol'),\r\n     dots = [];\r\n indicators.classList.add('crousel-indicators');\r\n indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n  `;\r\n slider.append(indicators);\r\n\r\n //* Цикл для создания точек, чтобы создалось кол-во точек в зависимости от количества слайдов\r\n for (let i = 0; i < slides.length; i++) {\r\n     const dot = document.createElement('li');\r\n\r\n     //* Каждой точке будет устанавливаться атрибут data-slide-to и выстравивать нумерацию начиная с единицы\r\n     dot.setAttribute('data-slide-to', i + 1);\r\n     dot.style.cssText = `\r\n          box-sizing: content-box;\r\n          flex: 0 1 auto;\r\n          width: 30px;\r\n          height: 6px;\r\n          margin-right: 3px;\r\n          margin-left: 3px;\r\n          cursor: pointer;\r\n          background-color: #fff;\r\n          background-clip: padding-box;\r\n          border-top: 10px solid transparent;\r\n          border-bottom: 10px solid transparent;\r\n          opacity: .5;\r\n          transition: opacity .6s ease;\r\n      `;\r\n\r\n     if (i == 0) {\r\n         dot.style.opacity = 1;\r\n     }\r\n     indicators.append(dot);\r\n\r\n     // Метод для отправки точек в массив\r\n     dots.push(dot);\r\n\r\n }\r\n\r\n function deleteNotDigits(str) {\r\n     return str.replace(/\\D/g, '');\r\n }\r\n\r\n //? Перебор всех точек, далее навешивание на каждый обработчика событий, \r\n //? далее получаем атрибут, который добавляется,\r\n dots.forEach(dot => {\r\n     dot.addEventListener('click', (e) => {\r\n         const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n         slideIndex = slideTo;\r\n         offset = deleteNotDigits(width) * (slideTo - 1);\r\n         slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n         if (slides.length < 10) {\r\n             current.textContent = `0${slideIndex}`;\r\n         } else {\r\n             current.textContent = slideIndex;\r\n         }\r\n\r\n         dots.forEach(dot => dot.style.opacity = '.5');\r\n         dots[slideIndex - 1].style.opacity = 1;\r\n\r\n     });\r\n });\r\n\r\n slidesWrapper.style.overflow = 'hidden';\r\n\r\n\r\n //! Самый простой вариант слайдера, сама логика отображения слайдов\r\n /* showSlides(slideIndex); \r\n\r\n //* Отображение общего количества слайдов\r\n // Будет каждый раз при вызове ф-ии запускаться этот скрипт \r\n // Если слайдов будет меньше 10, тогда будет строка с 0, в другом случае будет строка с количесвом, но без 0\r\n if (slides.length < 10) {\r\n     total.textContent = `0${slides.length}`;\r\n }else{\r\n     total.textContent = slides.length();\r\n }\r\n\r\n function showSlides(n) {\r\n     if (n > slides.length){\r\n         slideIndex = 1; \r\n     }\r\n\r\n     if (n < 1) {\r\n         slideIndex = 4; \r\n     }\r\n\r\n     //* Скрытие скрытие слайдов\r\n     slides.forEach(item => item.style.display = 'none'); \r\n\r\n\r\n     //* Отображение первого слайда\r\n     slides[slideIndex - 1].style.display = 'block'; \r\n\r\n     //* Отображение номера текущего слайда\r\n     if (slides.length < 10) {\r\n         current.textContent = `0${slideIndex}`;\r\n     }else{\r\n         current.textContent = slideIndex;\r\n     }\r\n }\r\n\r\n //* Изменение на 1 цифры у слайдера\r\n function plusSlides(n) {\r\n     showSlides(slideIndex += n)\r\n }\r\n\r\n prev.addEventListener('click', () => {\r\n     plusSlides(-1)\r\n });\r\n\r\n next.addEventListener('click', () => {\r\n     plusSlides(1)\r\n }) */\r\n\r\n}\r\n\r\nexport default slider;","function tabs() {\r\n    //! Tabs\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => { // Перебором получаеми все картинки, которые надо скрыть\r\n            item.classList.add('hide'); // Добавляем класс скрытия\r\n            item.classList.remove('show', 'fade'); // Убираем показывающий класс и анимацию\r\n        });\r\n        tabs.forEach(tab => { // Перебираем все табы\r\n            tab.classList.remove('tabheader__item_active'); // Удаляем класс активной вкладки\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { // По умолчанию будет показываться первая картинка\r\n        tabsContent[i].classList.add('show', 'fade'); // Добавляем показывающий класс и анимацию\r\n        tabsContent[i].classList.remove('hide'); // Удаляем скрывающий класс\r\n\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n    console.log('Hello');\r\n\r\n\r\n    tabsParent.addEventListener('click', (event) => { // За счёт обработчика будем получать информацию по клику\r\n        // и далее уже за счёт перебора получать аргумент i (порядковый номер), котторый будет вставляться в ф-ю показа\r\n        const target = event.target; // чтобы постоянно не прописывать event.target можно занести в переменную\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => { // Перебираются все табы и передаются аргументы элементов и порядкого номера\r\n                if (target == item) { // Если цель совпадает с элементом, то \r\n                    hideTabContent(); // Скрываются все табы и\r\n                    showTabContent(i); // Показывается только тот, который совпол с пордковым номером\r\n                    console.dir(event);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer() {\r\n     //! Timer\r\n\r\n     const deadline = '2025-05-25';\r\n\r\n     function getTimeRemaining(endtime) {\r\n         const t = Date.parse(endtime) - Date.parse(new Date()),\r\n             days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n             hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n             minutes = Math.floor((t / (1000 / 60)) % 60),\r\n             seconds = Math.floor((t / 1000) % 60);\r\n \r\n         return {\r\n             'total': t,\r\n             'days': days,\r\n             'hours': hours,\r\n             'minutes': minutes,\r\n             'seconds': seconds\r\n         };\r\n \r\n     }\r\n \r\n     function getZero(num) {\r\n         if (num >= 0 && num < 10) {\r\n             return `0${num}`;\r\n         } else {\r\n             return num;\r\n         }\r\n     }\r\n \r\n     function setClock(selector, endtime) {\r\n         const timer = document.querySelector(selector),\r\n             days = timer.querySelector('#days'),\r\n             hours = timer.querySelector('#hours'),\r\n             minuts = timer.querySelector('#minutes'),\r\n             seconds = timer.querySelector('#seconds'),\r\n             timeInterval = setInterval(updateClock, 1000);\r\n \r\n         updateClock();\r\n \r\n         function updateClock() {\r\n             const t = getTimeRemaining(endtime);\r\n \r\n             days.innerHTML = getZero(t.days);\r\n             hours.innerHTML = getZero(t.hours);\r\n             minuts.innerHTML = getZero(t.minutes);\r\n             seconds.innerHTML = getZero(t.seconds);\r\n \r\n             if (t.total <= 0) {\r\n                 clearInterval(timeInterval); //Если таймер будет равен нулю, то остановить его\r\n             }\r\n         }\r\n     }\r\n \r\n     setClock('.timer', deadline);\r\n}\r\n\r\nexport default timer; \r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms'; \r\nimport slider from './modules/slider';\r\nimport { openModal } from './modules/modal';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 300000);\r\n    tabs(); \r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer(); \r\n    cards(); \r\n    calc(); \r\n    forms(modalTimerId); \r\n    slider(); \r\n});\r\n\r\n\r\n"],"names":[],"sourceRoot":""}